Source File:
```
<template>
	<QuestionAccordion
		class="accordion-section"
		has-nested
	>
		<template #title>
			Accessibility
		</template>
		<template #content>
			<p>
				We believe that anyone can belong anywhere, 
				and we want to make it easier for people with disabilities and
				other accessibility needs to travel.
			</p>
			<p>
				Please reach out,
				and we will do everything in our capabilities to make your stay a success.
				Wheelchair accessibility is our biggest "next step" for our space.
				We appologize for that inconvenience.
			</p>
		</template>
	</QuestionAccordion>
</template>

<script>

export default {
	name: "AccessibilityQuestionAccordion",
	components: {},
}
</script>
```

package.json:
```
{
  "name": "hotel",
  "version": "2.2.4",
  "private": true,
  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "lint": "eslint --ext .js,.vue --ignore-path .gitignore --fix src",
    "test": "vitest",
    "test:coverage": "npm run test -- --coverage"
  },
  "dependencies": {
    "@fortawesome/fontawesome-svg-core": "^6.1.1",
    "@fortawesome/free-brands-svg-icons": "^6.1.1",
    "@fortawesome/free-solid-svg-icons": "^6.1.1",
    "@fortawesome/vue-fontawesome": "^3.0.1",
    "less": "^4.1.3",
    "less-loader": "^7.2.1",
    "luxon": "^2.4.0",
    "teahub": "^0.1.0-prerelease11",
    "vue": "^3.2.25",
    "vue-router": "^4.0.13",
    "vuex": "^4.0.2"
  },
  "devDependencies": {
    "@vitejs/plugin-vue": "^2.3.3",
    "@vue/test-utils": "^2.4.0-alpha.2",
    "eslint": "^8.19.0",
    "eslint-plugin-jsdoc": "^39.3.3",
    "eslint-plugin-vue": "^9.1.1",
    "firebase": "^11.1.0",
    "jsdom": "^25.0.1",
    "less": "^4.1.0",
    "less-loader": "^7.2.1",
    "vite": "^2.9.9",
    "vitest": "^2.1.2"
  },
  "eslintConfig": {
    "root": true,
    "env": {
      "node": true
    },
    "extends": [
      "plugin:vue/essential",
      "eslint:recommended",
      "@vue/standard"
    ],
    "rules": {},
    "overrides": [
      {
        "files": [
          "**/__tests__/*.{j,t}s?(x)",
          "**/tests/unit/**/*.spec.{j,t}s?(x)"
        ],
        "env": {
          "jest": true
        }
      }
    ]
  },
  "browserslist": [
    "> 1%",
    "last 2 versions",
    "not dead"
  ]
}
```

vitest.config.js:
```
import {resolve} from "path"
import { defineConfig } from "vitest/config"
import Vue from "@vitejs/plugin-vue"

export default defineConfig({
  plugins: [
    Vue(),
  ],
  resolve: {
    alias: {
      "@": resolve(__dirname, ".", "src"),
      components: resolve(__dirname, "src/components/"),
      constants: resolve(__dirname, "src/constants/"),
      find: /^~/,
      img: resolve(__dirname, "assets/img"),
      mocks: resolve(__dirname, ".", "tests/__mocks__/"),
      services: resolve(__dirname, "src/services/"),
      src: resolve(__dirname, "src"),
      store: resolve(__dirname, "src/store/"),
      styles: resolve(__dirname, "src/assets/styles/"),
      svgs: resolve(__dirname, "src/assets/svgs/"),
    },
  },

  root: ".", // Define the root
  test: {
    globals: true,
    environment: "jsdom",
    // The file extension of your test files
    include: [
      "tests/**/*.{test,spec}.{js,jsx,ts,tsx}",
    ],
  },
})
```

Assignment
Tests need to be written for a front end library. The app is using vite, vitest, and vu3.
Your job is to increase the test coverage of the code in `Source File` with tests written in vitest.
Ensure to use the vitest `mount` instead of `render`.
Ensure a helper function is created at the start of the file to create the `wrapper` using `mount`.
If there are any inherit bugs or issues, report the issues with the code with your response.
